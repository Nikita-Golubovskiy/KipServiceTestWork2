// <auto-generated />
using System;
using DataAccessLayer.KipServiceTestWork.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.KipServiceTestWork.Database.Migrations
{
    [DbContext(typeof(KipServiceTestWorkContext))]
    [Migration("20231228184211_Initialization")]
    partial class Initialization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.KipServiceTestWork.Database.Entities.Log", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar")
                        .HasColumnName("RequestsID");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RequestAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.KipServiceTestWork.Database.Entities.UserSign", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UserID");

                    b.Property<DateTimeOffset>("SignDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("UserID", "SignDate");

                    b.ToTable("UserSigns", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
